1. 게임 개발 시, 개발하는 컨셉에 맞는 데이터 구조 설계

  - 멀티 플레이 게임이라면, 서버나 DB 에 대한 구조를 어떻게 가져갈 것인가를 정한다.
     * firebase , 사설 서버, 구글 콘솔 클라우드, 플레이팹 등
  - 싱글 플레이 게임이라도, 기기마다 계정에 의한 데이터를 물고 있어야 한다. 따라서 적절한 저장 매체가 필요함.
     * 구글 콘솔 클라우드, 유니티 내장 PlayerPrefs
     
2. Monobehavior 를 상속받은 클래스는 init 매소드를 여러 개 생성하여, 각 event 매소드에 적절하게 배치하여야함.

public interface IComponentStyle
{
    void AwakeInit();   // Awake 에서만 초기화
    void EnableInit();  // Enable 되었을 때만 초기화
    void StartInit();   // Start 에서만 초기화
    void ReInit();      // 코드 로직 중에 초기화 필요한 경우   
}

위와 같은 인터페이스를 상속받은 구조를 구현함.

위와 같은 사례로 구현하는 이유는 게임이 리프레쉬되거나 특정 상황에서 초기화되는 요소들이 난잡하게 처리되는 경우가 있는데 이를 해결할 수 있다.
